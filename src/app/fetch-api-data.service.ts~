// fetch-api-data.service.ts is an Ng service that handles communication with an API

//=======================================================================================
// IMPORTS

import { Injectable } from '@angular/core';
import { catchError } from 'rxjs/internal/operators';
import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { map } from 'rxjs/operators';

// the api url that will provide data for the client app
const apiUrl = 'YOUR_HOSTED_API_URL_HERE/';

// decorator marks the service as injectable at the root level of the application
// i.e. this service will be available everywhere
@Injectable({
    providedIn: 'root'
})

export class FetchApiDataService {

    // add HttpClient class to its constructor to use its state and logic
    constructor(private http: HttpClient) {

    }

    //=================================================================================
    // CREATE
    
    public userRegistration(userDetails: any): Observable<any> {

	console.log(userDetails);

	return this.http
	    .post( apiUrl + 'users', userDetails )
	    .pipe( catchError(this.handleError) );
    }

    //=================================================================================
    // READ

    //=================================================================================
    // UPDATE
    
    //=================================================================================
    // DELETE

    //=================================================================================
    // MISC.

    // non-typed response extraction
    private extractResponseData(res: Response): any {
	const body = res;
	return body || { };
    }

    // handleError method
    private handleError(error: HttpErrorResponse): any {

	if (error.error instanceof ErrorEvent) {
	    console.error('Some error occurred:', error.error.message);
	} else {
	    console.error(
		`Error Status code ${error.status}, ` +
		    `Error body is: ${error.error}`);
	}

	return throwError(
	    'Something bad happened; please try again later.');
    }
    //=================================================================================
}
